name: Deploy Customer API to ECR

on:
  workflow_dispatch:
    inputs:
      # 빌드 내용 간단한 설명
      description:
        description: '(optional)해당 빌드에 대한 간단한 설명을 추가합니다'
        required: false
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle files
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Gradle Build (bootJar)
        run: ./gradlew :eatngo-customer-api:bootJar
        env:
          SPRING_PROFILES_ACTIVE: dev
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Upload jar to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "eatngo-customer-api/build/libs/*.jar"
          target: "/home/ec2-user/eatngo-customer-api"

      - name: Remote deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            pkill -f 'eatngo-customer-api' || true
            nohup java -jar /home/ec2-user/eatngo-customer-api/*.jar --spring.profiles.active=dev > app.log 2>&1 &